# Target the required hosts and become sudo

- hosts: nodes
  become: true

  tasks:
  
  # Install the first required application on the virtual machine
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

  # Install docker prerequisites   
    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    # Install docker keys to suppress the warning and error messages
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    
    # Add the repository to use when downloading Docker binaries
    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    # Update cache and install Docker
    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    # Final step for Docker, install the module for Python
    - name: Install Docker Module for Python
      pip:
        name: docker

 #Downloading mySQL image
    - name: Download mySQL image
      command: docker pull mysql:5.7.42-debian

  #Downloading Task Manager App 
    - name: Download app image
      command: docker pull iaziogas/app:latest
  
  #Creating subnetwork on docker
    - name: Create a network
      command: docker network create -d bridge network_team_1

  #Creating a container for the database
    - name: Create the database
      command: docker run -d --network=network_team_1 -e MYSQL_ROOT_PASSWORD=root --name mySQL_DB mysql:5.7.42-debian

    
#Obtaining the ip adress of the database
  # - name: Obtaining database IP address
  #   shell: docker inspect --format '{''{ .NetworkSettings.Networks.network_team_1.IPAddress }''}' mySQL_DB
  #   register: ip_address


  #Creating a container for the app
    - name: Start the app 
      command: "docker run -d -e DB_HOST=team1db.mysql.database.azure.com -e DB_USER=testadmin -e DB_USER_PASSWORD=DevOps2023! --network=network_team_1 -p 8080:8080 --name team_1_app iaziogas/app:latest"



